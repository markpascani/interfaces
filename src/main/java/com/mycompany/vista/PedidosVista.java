/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.vista;

import com.mycompany.modelo.entidades.Articulo;
import com.mycompany.modelo.entidades.Cliente;
import com.mycompany.modelo.entidades.Pedido;
import com.mycompany.modelo.entidades.Proveedor;
import com.mycompany.vista.interfaces.IVista;
import com.mycompany.vista.interfaces.PedidoListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JSeparator;
import javax.swing.JTextField;

/**
 *
 * @author Mihai Stinga
 */
public class PedidosVista extends javax.swing.JFrame implements IVista<Pedido> {

    // Modo actual de la vista
    public enum MODO {
        CLIENTE,
        PROVEEDOR,
        INICIAL,
    }
    private MODO modo;
    private boolean pedido;
    private PedidoListener listener;

    public boolean isPedido() {
        return pedido;
    }

    public void setPedido(boolean pedido) {
        this.pedido = pedido;
    }

    // Constructor
    public PedidosVista() {
        initComponents();
        estadoInicial();
        configurarEventos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        campoCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        campoNIF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        campoDomicilio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        campoApellidos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        campoCP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        campoLocalidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        campoTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        campoArticulo = new javax.swing.JTextField();
        campoDescripcion = new javax.swing.JTextField();
        campoUnidades = new javax.swing.JTextField();
        campoStock = new javax.swing.JTextField();
        campoPrecio = new javax.swing.JTextField();
        campoImporte = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        botonFactura = new javax.swing.JButton();
        botonAceptar = new javax.swing.JButton();
        botonCancelarPedido = new javax.swing.JButton();
        botonCancelarTodo = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        opcionVolver = new javax.swing.JMenu();
        menuCliente = new javax.swing.JMenuItem();
        menuProveedor = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        Volver = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Codigo");

        campoNIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNIFActionPerformed(evt);
            }
        });

        jLabel2.setText("NIF");

        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre");

        campoDomicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDomicilioActionPerformed(evt);
            }
        });

        jLabel4.setText("Apellidos");

        campoApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoApellidosActionPerformed(evt);
            }
        });

        jLabel5.setText("Domicilio");

        jLabel6.setText("CP");

        campoLocalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoLocalidadActionPerformed(evt);
            }
        });

        jLabel7.setText("Localidad");

        jLabel8.setText("Total");

        jLabel9.setText("Artículo");

        jLabel10.setText("Descripción");

        jLabel11.setText("Unidades");

        jLabel12.setText("Stock");

        jLabel13.setText("Precio");

        jLabel14.setText("Importe");

        botonFactura.setText("Factura");

        botonAceptar.setText("Aceptar");

        botonCancelarPedido.setText("Cancelar Pedido");

        botonCancelarTodo.setText("Cancelar Todo");
        botonCancelarTodo.setToolTipText("");

        botonSalir.setText("Salir");

        opcionVolver.setText("Pedidos");
        opcionVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                opcionVolverMousePressed(evt);
            }
        });

        menuCliente.setText("Cliente");
        opcionVolver.add(menuCliente);

        menuProveedor.setText("Proveedor");
        opcionVolver.add(menuProveedor);
        opcionVolver.add(jSeparator2);

        Volver.setText("Volver");
        opcionVolver.add(Volver);

        jMenuBar1.add(opcionVolver);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoNIF, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoDomicilio)
                            .addComponent(campoApellidos)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoCP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoDescripcion)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(botonFactura)
                                .addGap(18, 18, 18)
                                .addComponent(botonAceptar)
                                .addGap(18, 18, 18)
                                .addComponent(botonSalir))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campoStock, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(botonCancelarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campoImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(botonCancelarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 24, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonFactura)
                    .addComponent(botonAceptar)
                    .addComponent(botonSalir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCancelarPedido)
                    .addComponent(botonCancelarTodo))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcionVolverMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcionVolverMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcionVolverMousePressed

    private void campoNIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNIFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNIFActionPerformed

    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void campoDomicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDomicilioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDomicilioActionPerformed

    private void campoApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoApellidosActionPerformed

    private void campoLocalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoLocalidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoLocalidadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PedidosVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PedidosVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PedidosVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PedidosVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidosVista().setVisible(true);
            }
        });
    }

// ------------------------------------------------------------------------
    // Métodos de la Interfaz IVista<Pedido>
    // ------------------------------------------------------------------------
    @Override
    public void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    /**
     * Limpia los campos según el modo: - MODO.INICIAL/CLIENTE/PROVEEDOR: limpia
     * TODOS los campos - MODO.PEDIDO: limpia sólo la parte de artículo.
     */
    @Override
    public void limpiarCampos() {
        if (!pedido) {
            // Limpiamos absolutamente todo
            campoCodigo.setText("");
            campoNIF.setText("");
            campoNombre.setText("");
            campoApellidos.setText("");
            campoDomicilio.setText("");
            campoCP.setText("");
            campoLocalidad.setText("");
            campoTotal.setText("");

            campoArticulo.setText("");
            campoDescripcion.setText("");
            campoUnidades.setText("");
            campoStock.setText("");
            campoPrecio.setText("");
            campoImporte.setText("");
        } else {
            // Limpiamos únicamente los campos de artículo
            campoArticulo.setText("");
            campoDescripcion.setText("");
            campoUnidades.setText("");
            campoStock.setText("");
            campoPrecio.setText("");
            campoImporte.setText("");
        }
    }

    /**
     * Habilita/deshabilita campos según el modo: - En MODO.CLIENTE/PROVEEDOR se
     * habilita 'campoCodigo' y se deshabilitan resto. - En MODO.PEDIDO se
     * habilitan los campos de artículo/unidades.
     */
    @Override
    public void estadoCampos(boolean estado) {
        // Caso 1: MODO.CLIENTE/PROVEEDOR
        if ((modo == MODO.CLIENTE || modo == MODO.PROVEEDOR)&& !pedido) {
            // Habilitamos el campo del código
            campoCodigo.setEnabled(estado);

            // Deshabilitamos campos de artículos
            campoArticulo.setEnabled(!estado);
            campoDescripcion.setEnabled(false);
            campoUnidades.setEnabled(!estado);
            campoStock.setEnabled(false);
            campoPrecio.setEnabled(false);
            campoImporte.setEnabled(false);

            // Botones
            botonAceptar.setEnabled(false);
            botonCancelarPedido.setEnabled(false);
            botonCancelarTodo.setEnabled(false);
            botonFactura.setEnabled(false);
        } // Caso 2: MODO.PEDIDO
        else if ((modo == MODO.CLIENTE || modo == MODO.PROVEEDOR)&& pedido) {
            // Deshabilitamos el campo del código de cliente/proveedor
            campoCodigo.setEnabled(false);

            // Habilitamos los campos de artículo/unidades
            campoArticulo.setEnabled(true);
            campoDescripcion.setEnabled(false);
            campoUnidades.setEnabled(false);
            campoStock.setEnabled(false);
            campoPrecio.setEnabled(false);
            campoImporte.setEnabled(false);

            // Botones
            botonAceptar.setEnabled(false);
            botonCancelarPedido.setEnabled(true);
            botonCancelarTodo.setEnabled(true);
            botonFactura.setEnabled(false);
        }
    }

    /**
     * Al inicio la pantalla está sin modo (INICIAL), sólo botón Salir
     * habilitado.
     */
    @Override
    public void estadoInicial() {
        this.modo = MODO.INICIAL;
        this.pedido = false;
        limpiarCampos();

        // Solo el botón Salir está disponible
        botonSalir.setEnabled(true);
        botonAceptar.setEnabled(false);
        botonCancelarPedido.setEnabled(false);
        botonCancelarTodo.setEnabled(false);
        botonFactura.setEnabled(false);

        // Todos los campos inhabilitados
        campoCodigo.setEnabled(false);
        campoNIF.setEnabled(false);
        campoNombre.setEnabled(false);
        campoApellidos.setEnabled(false);
        campoDomicilio.setEnabled(false);
        campoCP.setEnabled(false);
        campoLocalidad.setEnabled(false);
        campoTotal.setEnabled(false);

        campoArticulo.setEnabled(false);
        campoDescripcion.setEnabled(false);
        campoUnidades.setEnabled(false);
        campoStock.setEnabled(false);
        campoPrecio.setEnabled(false);
        campoImporte.setEnabled(false);
    }

    /**
     * Si se cancela cualquier acción genérica, vuelve al estado inicial.
     */
    @Override
    public void cancelarAccion() {
        limpiarCampos();
        estadoInicial();
    }

    @Override
    public void irAPaginaDeInicio() {
        // cerramos la ventana:
        this.dispose();
        new Inicio().setVisible(true);
    }

    /**
     * Devuelve el código de cliente/proveedor que el usuario haya tecleado.
     */
    @Override
    public int obtenerCodigoEntidad() {
        try {
            return Integer.parseInt(campoCodigo.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    /**
     * Devuelve el código del artículo que el usuario haya tecleado.
     */
    public int obtenerCodigoArticulo() {
        try {
            return Integer.parseInt(campoArticulo.getText().trim());
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    @Override
    public void enfocarCampo(String campo) {
        // Para dirigir el foco a un componente concreto
        switch (campo) {
            case "codigo":
                campoCodigo.requestFocus();
                break;
            case "articulo":
                campoArticulo.requestFocus();
                break;
            case "unidades":
                campoUnidades.requestFocus();
                break;
        }
    }

    // ------------------------------------------------------------------------
    // Métodos adicionales para mostrar datos de Cliente/Proveedor/Artículo
    // ------------------------------------------------------------------------
    public void mostrarDatosCliente(Cliente c) {
        if (c == null) {
            return;
        }
        campoNIF.setText(c.getNif());
        campoNombre.setText(c.getNombre());
        campoApellidos.setText(c.getApellidos());
        campoDomicilio.setText(c.getDomicilio());
        campoCP.setText(c.getCodigoPostal());
        campoLocalidad.setText(c.getLocalidad());
        // El enunciado habla de “Total Ventas” (campoTotal)
        campoTotal.setText(String.valueOf(c.getTotalVentas()));
    }

    public void mostrarDatosProveedor(Proveedor p) {
        if (p == null) {
            return;
        }
        campoNIF.setText(p.getNif());
        campoNombre.setText(p.getNombre());
        campoApellidos.setText(p.getApellidos());
        campoDomicilio.setText(p.getDomicilio());
        campoCP.setText(p.getCodigoPostal());
        campoLocalidad.setText(p.getLocalidad());
        // El enunciado habla de “Total Compras” (campoTotal)
        campoTotal.setText(String.valueOf(p.getTotalCompras()));
    }

    public void mostrarDatosArticulo(Articulo a) {
        if (a == null) {
            return;
        }
        campoDescripcion.setText(a.getDescripcion());
        campoStock.setText(String.valueOf(a.getStock()));
        // Según sea cliente/proveedor, mostramos precio de venta o compra
        float precio = (modo == MODO.CLIENTE) ? a.getPrecioVenta() : a.getPrecioCompra();
        campoPrecio.setText(String.valueOf(precio));
        campoImporte.setText("");
    }

    //configuracion del pedido
    // ------------------------------------------------------------------------
    // Configuración de eventos y listeners
    // ------------------------------------------------------------------------
    private void configurarEventos() {
        // Opción del menú para PEDIDOS -> Cliente
        menuCliente.addActionListener((e) -> {
            if (listener != null) {
                listener.seleccionarModoCliente();
            }
        });

        // Opción del menú para PEDIDOS -> Proveedor
        menuProveedor.addActionListener((e) -> {
            if (listener != null) {
                listener.seleccionarModoProveedor();
            }
        });

        // Opción del menú: Volver (regresa a la ventana principal)
        Volver.addActionListener((e) -> {
            if (listener != null) {
                listener.volver();
            }
        });

        // Pulsar ENTER en campoCodigo => validar el código de cliente/proveedor
        campoCodigo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER && listener != null) {
                    listener.validarCodigoEntidad();
                }
            }
        });

        // Pulsar ENTER en campoArticulo => validar artículo y mostrar datos
        campoArticulo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER && listener != null) {
                    listener.validarArticulo();
                }
            }
        });

        // Pulsar ENTER en campoUnidades => calcular importe y habilitar botón Aceptar
        campoUnidades.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER && listener != null) {
                    listener.calcularImporte();
                }
            }
        });

        // BOTÓN ACEPTAR => Actualizar tablas, grabar pedido en histórico, etc.
        botonAceptar.addActionListener((e) -> {
            if (listener != null) {
                listener.procesarPedido();
            }
        });

        // BOTÓN Cancelar Pedido => limpiar sólo el “pedido actual” (artículo, unidades)
        botonCancelarPedido.addActionListener((e) -> {
            if (listener != null) {
                listener.cancelarPedido();
            }
        });

        // BOTÓN Cancelar Todo => rollback de toda la transacción
        botonCancelarTodo.addActionListener((e) -> {
            if (listener != null) {
                listener.cancelarTodo();
            }
        });

        // BOTÓN Factura => commit y emitir factura (cliente) o solo commit (proveedor)
        botonFactura.addActionListener((e) -> {
            if (listener != null) {
                listener.generarFactura();
            }
        });

        // BOTÓN Salir => rollback final y volver a la primera ventana
        botonSalir.addActionListener((e) -> {
            if (listener != null) {
                listener.salir();
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Volver;
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelarPedido;
    private javax.swing.JButton botonCancelarTodo;
    private javax.swing.JButton botonFactura;
    private javax.swing.JButton botonSalir;
    private javax.swing.JTextField campoApellidos;
    private javax.swing.JTextField campoArticulo;
    private javax.swing.JTextField campoCP;
    private javax.swing.JTextField campoCodigo;
    private javax.swing.JTextField campoDescripcion;
    private javax.swing.JTextField campoDomicilio;
    private javax.swing.JTextField campoImporte;
    private javax.swing.JTextField campoLocalidad;
    private javax.swing.JTextField campoNIF;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoPrecio;
    private javax.swing.JTextField campoStock;
    private javax.swing.JTextField campoTotal;
    private javax.swing.JTextField campoUnidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem menuCliente;
    private javax.swing.JMenuItem menuProveedor;
    private javax.swing.JMenu opcionVolver;
    // End of variables declaration//GEN-END:variables

    public PedidoListener getListener() {
        return listener;
    }

    public void setListener(PedidoListener listener) {
        this.listener = listener;
    }

    public JMenuItem getVolver() {
        return Volver;
    }

    public void setVolver(JMenuItem Volver) {
        this.Volver = Volver;
    }

    public JButton getBotonAceptar() {
        return botonAceptar;
    }

    public void setBotonAceptar(JButton botonAceptar) {
        this.botonAceptar = botonAceptar;
    }

    public JButton getBotonCancelarPedido() {
        return botonCancelarPedido;
    }

    public void setBotonCancelarPedido(JButton botonCancelarPedido) {
        this.botonCancelarPedido = botonCancelarPedido;
    }

    public JButton getBotonCancelarTodo() {
        return botonCancelarTodo;
    }

    public void setBotonCancelarTodo(JButton botonCancelarTodo) {
        this.botonCancelarTodo = botonCancelarTodo;
    }

    public JButton getBotonFactura() {
        return botonFactura;
    }

    public void setBotonFactura(JButton botonFactura) {
        this.botonFactura = botonFactura;
    }

    public JButton getBotonSalir() {
        return botonSalir;
    }

    public void setBotonSalir(JButton botonSalir) {
        this.botonSalir = botonSalir;
    }

    public JTextField getCampoApellidos() {
        return campoApellidos;
    }

    public void setCampoApellidos(JTextField campoApellidos) {
        this.campoApellidos = campoApellidos;
    }

    public JTextField getCampoArticulo() {
        return campoArticulo;
    }

    public void setCampoArticulo(JTextField campoArticulo) {
        this.campoArticulo = campoArticulo;
    }

    public JTextField getCampoCP() {
        return campoCP;
    }

    public void setCampoCP(JTextField campoCP) {
        this.campoCP = campoCP;
    }

    public JTextField getCampoCodigo() {
        return campoCodigo;
    }

    public void setCampoCodigo(JTextField campoCodigo) {
        this.campoCodigo = campoCodigo;
    }

    public JTextField getCampoDescripcion() {
        return campoDescripcion;
    }

    public void setCampoDescripcion(JTextField campoDescripcion) {
        this.campoDescripcion = campoDescripcion;
    }

    public JTextField getCampoDomicilio() {
        return campoDomicilio;
    }

    public void setCampoDomicilio(JTextField campoDomicilio) {
        this.campoDomicilio = campoDomicilio;
    }

    public JTextField getCampoImporte() {
        return campoImporte;
    }

    public void setCampoImporte(JTextField campoImporte) {
        this.campoImporte = campoImporte;
    }

    public JTextField getCampoLocalidad() {
        return campoLocalidad;
    }

    public void setCampoLocalidad(JTextField campoLocalidad) {
        this.campoLocalidad = campoLocalidad;
    }

    public JTextField getCampoNIF() {
        return campoNIF;
    }

    public void setCampoNIF(JTextField campoNIF) {
        this.campoNIF = campoNIF;
    }

    public JTextField getCampoNombre() {
        return campoNombre;
    }

    public void setCampoNombre(JTextField campoNombre) {
        this.campoNombre = campoNombre;
    }

    public JTextField getCampoPrecio() {
        return campoPrecio;
    }

    public void setCampoPrecio(JTextField campoPrecio) {
        this.campoPrecio = campoPrecio;
    }

    public JTextField getCampoStock() {
        return campoStock;
    }

    public void setCampoStock(JTextField campoStock) {
        this.campoStock = campoStock;
    }

    public JTextField getCampoTotal() {
        return campoTotal;
    }

    public void setCampoTotal(JTextField campoTotal) {
        this.campoTotal = campoTotal;
    }

    public JTextField getCampoUnidades() {
        return campoUnidades;
    }

    public void setCampoUnidades(JTextField campoUnidades) {
        this.campoUnidades = campoUnidades;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel10() {
        return jLabel10;
    }

    public void setjLabel10(JLabel jLabel10) {
        this.jLabel10 = jLabel10;
    }

    public JLabel getjLabel11() {
        return jLabel11;
    }

    public void setjLabel11(JLabel jLabel11) {
        this.jLabel11 = jLabel11;
    }

    public JLabel getjLabel12() {
        return jLabel12;
    }

    public void setjLabel12(JLabel jLabel12) {
        this.jLabel12 = jLabel12;
    }

    public JLabel getjLabel13() {
        return jLabel13;
    }

    public void setjLabel13(JLabel jLabel13) {
        this.jLabel13 = jLabel13;
    }

    public JLabel getjLabel14() {
        return jLabel14;
    }

    public void setjLabel14(JLabel jLabel14) {
        this.jLabel14 = jLabel14;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    public JLabel getjLabel5() {
        return jLabel5;
    }

    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JLabel getjLabel7() {
        return jLabel7;
    }

    public void setjLabel7(JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    public JLabel getjLabel8() {
        return jLabel8;
    }

    public void setjLabel8(JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    public JLabel getjLabel9() {
        return jLabel9;
    }

    public void setjLabel9(JLabel jLabel9) {
        this.jLabel9 = jLabel9;
    }

    public JMenuBar getjMenuBar1() {
        return jMenuBar1;
    }

    public void setjMenuBar1(JMenuBar jMenuBar1) {
        this.jMenuBar1 = jMenuBar1;
    }

    public JSeparator getjSeparator1() {
        return jSeparator1;
    }

    public void setjSeparator1(JSeparator jSeparator1) {
        this.jSeparator1 = jSeparator1;
    }

    public JPopupMenu.Separator getjSeparator2() {
        return jSeparator2;
    }

    public void setjSeparator2(JPopupMenu.Separator jSeparator2) {
        this.jSeparator2 = jSeparator2;
    }

    public JMenuItem getMenuCliente() {
        return menuCliente;
    }

    public void setMenuCliente(JMenuItem menuCliente) {
        this.menuCliente = menuCliente;
    }

    public JMenuItem getMenuProveedor() {
        return menuProveedor;
    }

    public void setMenuProveedor(JMenuItem menuProveedor) {
        this.menuProveedor = menuProveedor;
    }

    public JMenu getOpcionVolver() {
        return opcionVolver;
    }

    public void setOpcionVolver(JMenu opcionVolver) {
        this.opcionVolver = opcionVolver;
    }

    public void setPedidoListener(PedidoListener listener) {
        this.listener = listener;
    }

    public void setModo(MODO modo) {
        this.modo = modo;
    }

    public MODO getModo() {
        return this.modo;
    }

    // Métodos de IVista que en este ejemplo no utilizamos
    @Override
    public void limitarEntradaLetrasConLongitudMinYMax(JTextField c, int m1, int m2) {
    }

    @Override
    public void limitarEntradaACifraConLongitudExacta(JTextField c, int l) {
    }

    @Override
    public void comprobarEmail(JTextField c) {
    }

    @Override
    public void limitarEntradaALongitudMinYMax(JTextField c, int m1, int m2) {
    }

    @Override
    public void mostrarEntidad(Pedido entidad) {
    }

    @Override
    public Pedido obtenerEntidadDelFormulario() {
        return null;
    }
}
